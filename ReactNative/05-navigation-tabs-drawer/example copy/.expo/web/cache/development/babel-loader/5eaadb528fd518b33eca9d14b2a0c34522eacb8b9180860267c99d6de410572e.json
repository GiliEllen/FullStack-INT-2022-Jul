{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport CatagoriesScreen from \"./screens/CatagoriesScreen\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport MealsOverViewScreen from \"./screens/MealsOverViewScree\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nfunction NotificationsScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(Button, {\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      title: \"Go back home\"\n    })\n  });\n}\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"mealsCategories\",\n          component: CatagoriesScreen,\n          options: {\n            title: \"Meals!\",\n            headerStyle: {\n              backgroundColor: \"#351401\"\n            },\n            headerTintColor: 'white',\n            contentStyle: {\n              backgroundColor: '#3f2f25'\n            }\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"mealsoverview\",\n          component: MealsOverViewScreen\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","View","Button","NavigationContainer","CatagoriesScreen","createNativeStackNavigator","MealsOverViewScreen","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","NotificationsScreen","_ref","navigation","style","flex","alignItems","justifyContent","children","onPress","goBack","title","App","Navigator","Screen","name","component","options","headerStyle","backgroundColor","headerTintColor","contentStyle","styles","create","container"],"sources":["G:/github-desktop/FullStack-INT-2022-Jul/ReactNative/02-more-basic-navigation/example/App.tsx"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View,Button } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport CatagoriesScreen from \"./screens/CatagoriesScreen\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport MealsOverViewScreen from \"./screens/MealsOverViewScree\";\n\nconst Stack = createNativeStackNavigator();\n\nfunction NotificationsScreen({ navigation }:any) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Button onPress={() => navigation.goBack()} title=\"Go back home\" />\n    </View>\n  );\n}\n\n\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"dark\" />\n      <NavigationContainer>\n        <Stack.Navigator>\n          <Stack.Screen\n            name=\"mealsCategories\"\n            component={CatagoriesScreen}\n            options={{\n              title: \"Meals!\",\n              headerStyle: {\n                backgroundColor: \"#351401\",\n              },\n              headerTintColor: 'white',\n              contentStyle: {\n                backgroundColor: '#3f2f25'\n              }\n            }}\n          />\n          <Stack.Screen name=\"mealsoverview\" component={MealsOverViewScreen} />\n        </Stack.Navigator>\n      </NavigationContainer>\n\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAE5C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,gBAAgB;AACvB,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,OAAOC,mBAAmB;AAAqC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/D,IAAMC,KAAK,GAAGR,0BAA0B,CAAC,CAAC;AAE1C,SAASS,mBAAmBA,CAAAC,IAAA,EAAqB;EAAA,IAAlBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACvC,OACER,IAAA,CAACP,IAAI;IAACgB,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,EACvEb,IAAA,CAACN,MAAM;MAACoB,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,MAAM,CAAC,CAAC;MAAA,CAAC;MAACC,KAAK,EAAC;IAAc,CAAE;EAAC,CAC/D,CAAC;AAEX;AAIA,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,OACEf,KAAA,CAAAE,SAAA;IAAAS,QAAA,GACEb,IAAA,CAACT,SAAS;MAACkB,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1BT,IAAA,CAACL,mBAAmB;MAAAkB,QAAA,EAClBX,KAAA,CAACG,KAAK,CAACa,SAAS;QAAAL,QAAA,GACdb,IAAA,CAACK,KAAK,CAACc,MAAM;UACXC,IAAI,EAAC,iBAAiB;UACtBC,SAAS,EAAEzB,gBAAiB;UAC5B0B,OAAO,EAAE;YACPN,KAAK,EAAE,QAAQ;YACfO,WAAW,EAAE;cACXC,eAAe,EAAE;YACnB,CAAC;YACDC,eAAe,EAAE,OAAO;YACxBC,YAAY,EAAE;cACZF,eAAe,EAAE;YACnB;UACF;QAAE,CACH,CAAC,EACFxB,IAAA,CAACK,KAAK,CAACc,MAAM;UAACC,IAAI,EAAC,eAAe;UAACC,SAAS,EAAEvB;QAAoB,CAAE,CAAC;MAAA,CACtD;IAAC,CACC,CAAC;EAAA,CAEtB,CAAC;AAEP;AAEA,IAAM6B,MAAM,GAAGnC,UAAU,CAACoC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTnB,IAAI,EAAE,CAAC;IACPc,eAAe,EAAE,MAAM;IACvBb,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}