{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar CategoryGridTile = function CategoryGridTile(_ref) {\n  var title = _ref.title,\n    color = _ref.color,\n    onPress = _ref.onPress;\n  return _jsx(View, {\n    style: styles.gridItem,\n    children: _jsx(Pressable, {\n      onPress: onPress,\n      android_ripple: {\n        color: '#ccc'\n      },\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [styles.button, pressed ? styles.buttonPressed : null];\n      },\n      children: _jsx(View, {\n        style: [styles.innerContainer, {\n          backgroundColor: color\n        }],\n        children: _jsx(Text, {\n          style: styles.title,\n          children: title\n        })\n      })\n    })\n  });\n};\nexport default CategoryGridTile;\nvar styles = StyleSheet.create({\n  gridItem: {\n    marginTop: 30,\n    flex: 1,\n    margin: 16,\n    height: 150,\n    borderRadius: 8,\n    elevation: 4,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 8,\n    backgroundColor: 'white',\n    overflow: Platform.OS === \"android\" ? 'hidden' : 'visible'\n  },\n  button: {\n    flex: 1\n  },\n  buttonPressed: {\n    opacity: 0.5\n  },\n  innerContainer: {\n    flex: 1,\n    padding: 16,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 8\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 18\n  }\n});","map":{"version":3,"names":["React","View","Pressable","Text","StyleSheet","Platform","jsx","_jsx","CategoryGridTile","_ref","title","color","onPress","style","styles","gridItem","children","android_ripple","_ref2","pressed","button","buttonPressed","innerContainer","backgroundColor","create","marginTop","flex","margin","height","borderRadius","elevation","shadowColor","shadowOffset","width","shadowRadius","overflow","OS","opacity","padding","justifyContent","alignItems","fontWeight","fontSize"],"sources":["G:/github-desktop/FullStack-INT-2022-Jul/ReactNative/02-more-basic-navigation/example/components/CategoryGridTile.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { View, Pressable, Text, StyleSheet, Platform } from \"react-native\";\r\nimport { FC } from \"react\";\r\n\r\ninterface CategoryGridTileProps {\r\n  title: string;\r\n  color: string;\r\n  onPress: any\r\n}\r\n\r\nconst CategoryGridTile: FC<CategoryGridTileProps> = ({ title, color, onPress }) => {\r\n  return (\r\n    <View style={styles.gridItem}>\r\n      <Pressable onPress={onPress} android_ripple={{color: '#ccc'}} style={({pressed}) => [styles.button, pressed ? styles.buttonPressed : null]}>\r\n        <View style={[styles.innerContainer, {backgroundColor:color}]}>\r\n          <Text style={styles.title}>{title}</Text>\r\n        </View>\r\n      </Pressable>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default CategoryGridTile;\r\n\r\nconst styles = StyleSheet.create({\r\n  gridItem: {\r\n    marginTop: 30,\r\n    flex: 1,\r\n    margin: 16,\r\n    height: 150,\r\n    borderRadius: 8,\r\n    elevation: 4,\r\n    shadowColor: 'black',\r\n    shadowOffset: {width: 0, height: 2},\r\n    shadowRadius: 8,\r\n    backgroundColor: 'white',\r\n    overflow: Platform.OS === \"android\" ? 'hidden' : 'visible'\r\n  },\r\n  button: {\r\n    flex: 1,\r\n  },\r\n  buttonPressed: {\r\n    opacity: 0.5\r\n  },\r\n  innerContainer: {\r\n    flex: 1,\r\n    padding: 16,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderRadius: 8,\r\n  },\r\n  title: {\r\n    fontWeight: 'bold',\r\n    fontSize: 18\r\n  }\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAU1B,IAAMC,gBAA2C,GAAG,SAA9CA,gBAA2CA,CAAAC,IAAA,EAAkC;EAAA,IAA5BC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EAC1E,OACEL,IAAA,CAACN,IAAI;IAACY,KAAK,EAAEC,MAAM,CAACC,QAAS;IAAAC,QAAA,EAC3BT,IAAA,CAACL,SAAS;MAACU,OAAO,EAAEA,OAAQ;MAACK,cAAc,EAAE;QAACN,KAAK,EAAE;MAAM,CAAE;MAACE,KAAK,EAAE,SAAAA,MAAAK,KAAA;QAAA,IAAEC,OAAO,GAAAD,KAAA,CAAPC,OAAO;QAAA,OAAM,CAACL,MAAM,CAACM,MAAM,EAAED,OAAO,GAAGL,MAAM,CAACO,aAAa,GAAG,IAAI,CAAC;MAAA,CAAC;MAAAL,QAAA,EACzIT,IAAA,CAACN,IAAI;QAACY,KAAK,EAAE,CAACC,MAAM,CAACQ,cAAc,EAAE;UAACC,eAAe,EAACZ;QAAK,CAAC,CAAE;QAAAK,QAAA,EAC5DT,IAAA,CAACJ,IAAI;UAACU,KAAK,EAAEC,MAAM,CAACJ,KAAM;UAAAM,QAAA,EAAEN;QAAK,CAAO;MAAC,CACrC;IAAC,CACE;EAAC,CACR,CAAC;AAEX,CAAC;AAED,eAAeF,gBAAgB;AAE/B,IAAMM,MAAM,GAAGV,UAAU,CAACoB,MAAM,CAAC;EAC/BT,QAAQ,EAAE;IACRU,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,GAAG;IACXC,YAAY,EAAE,CAAC;IACfC,SAAS,EAAE,CAAC;IACZC,WAAW,EAAE,OAAO;IACpBC,YAAY,EAAE;MAACC,KAAK,EAAE,CAAC;MAAEL,MAAM,EAAE;IAAC,CAAC;IACnCM,YAAY,EAAE,CAAC;IACfX,eAAe,EAAE,OAAO;IACxBY,QAAQ,EAAE9B,QAAQ,CAAC+B,EAAE,KAAK,SAAS,GAAG,QAAQ,GAAG;EACnD,CAAC;EACDhB,MAAM,EAAE;IACNM,IAAI,EAAE;EACR,CAAC;EACDL,aAAa,EAAE;IACbgB,OAAO,EAAE;EACX,CAAC;EACDf,cAAc,EAAE;IACdI,IAAI,EAAE,CAAC;IACPY,OAAO,EAAE,EAAE;IACXC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBX,YAAY,EAAE;EAChB,CAAC;EACDnB,KAAK,EAAE;IACL+B,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}